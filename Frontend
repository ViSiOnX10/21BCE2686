import React, { useState } from 'react';
import JSONPretty from 'react-json-pretty';
import Select from 'react-select';
import axios from 'axios';
import './App.css';

const options = [
  { value: 'alphabets', label: 'Alphabets' },
  { value: 'numbers', label: 'Numbers' },
  { value: 'highest_lowercase_alphabet', label: 'Highest Lowercase Alphabet' },
];

function App() {
  const [jsonInput, setJsonInput] = useState('');
  const [error, setError] = useState('');
  const [response, setResponse] = useState(null);
  const [selectedOptions, setSelectedOptions] = useState([]);

  const handleSubmit = async () => {
    setError('');
    setResponse(null);

    // Validate JSON input
    let parsedData;
    try {
      parsedData = JSON.parse(jsonInput);
      if (!parsedData || !Array.isArray(parsedData.data)) {
        throw new Error('Invalid JSON structure. Expected {"data": [...]}.');
      }
    } catch (err) {
      setError('Invalid JSON input.');
      return;
    }

    // Send the valid JSON to the backend
    try {
      const res = await axios.post('http://your-backend-url/bfhl', parsedData);
      setResponse(res.data);
    } catch (err) {
      setError('Error fetching data from the backend.');
    }
  };

  const renderResponse = () => {
    if (!response) return null;

    const filteredResponse = {};
    selectedOptions.forEach((option) => {
      filteredResponse[option.value] = response[option.value];
    });

    return <JSONPretty data={filteredResponse}></JSONPretty>;
  };

  return (
    <div className="App">
      <h1>BFHL Frontend</h1>
      <textarea
        value={jsonInput}
        onChange={(e) => setJsonInput(e.target.value)}
        placeholder='Enter JSON e.g. {"data": ["A", "C", "z"]}'
      />
      <button onClick={handleSubmit}>Submit</button>
      {error && <p className="error">{error}</p>}

      {response && (
        <div className="response-section">
          <h2>Select Response Data to Display</h2>
          <Select
            options={options}
            isMulti
            onChange={setSelectedOptions}
          />
          {renderResponse()}
        </div>
      )}
    </div>
  );
}

export default App;


















.App {
  font-family: Arial, sans-serif;
  max-width: 800px;
  margin: 20px auto;
  text-align: center;
}

textarea {
  width: 100%;
  height: 150px;
  margin-bottom: 20px;
  padding: 10px;
  font-size: 16px;
}

button {
  padding: 10px 20px;
  font-size: 16px;
  cursor: pointer;
}

.error {
  color: red;
  margin-top: 10px;
}

.response-section {
  margin-top: 20px;
}

.response-section h2 {
  margin-bottom: 10px;
}
